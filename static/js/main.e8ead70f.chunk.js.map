{"version":3,"sources":["components/ExpensesFilter/ExpensesFilter.js","components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpensesFilter","props","className","value","selectedYear","onChange","event","onChangeFilter","target","Card","classes","children","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMax","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8ead70f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n\tconst filterChangeHandler = (event) => {\r\n\t\tprops.onChangeFilter(event.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"expenses-filter\">\r\n\t\t\t<div className=\"expenses-filter__control\">\r\n\t\t\t\t<label>Filter by year</label>\r\n\t\t\t\t<select value={props.selectedYear} onChange={filterChangeHandler}>\r\n\t\t\t\t\t<option value=\"2022\">2022</option>\r\n\t\t\t\t\t<option value=\"2021\">2021</option>\r\n\t\t\t\t\t<option value=\"2020\">2020</option>\r\n\t\t\t\t\t<option value=\"2019\">2019</option>\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import './Card.css';\r\n\r\nconst Card = (props) => {\r\n\tconst classes = 'card ' + props.className;\r\n\treturn <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n\tconst month = props.date.toLocaleString('en-us', { month: 'long' });\r\n\tconst day = props.date.toLocaleString('en-us', { day: '2-digit' });\r\n\tconst year = props.date.getFullYear();\r\n\r\n\treturn (\r\n\t\t<div className=\"expense-date\">\r\n\t\t\t<div className=\"expense-date__month\">{month}</div>\r\n\t\t\t<div className=\"expense-year\">{year}</div>\r\n\t\t\t<div className=\"expense-day\">{day}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import Card from '../UI/Card';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport './ExpenseItem.css';\r\n\r\nconst ExpenseItem = (props) => {\r\n\treturn (\r\n\t\t<li>\r\n\t\t\t<Card className=\"expense-item\">\r\n\t\t\t\t<ExpenseDate date={props.date} />\r\n\t\t\t\t<div className=\"expense-item__description\">\r\n\t\t\t\t\t<h2>{props.title}</h2>\r\n\t\t\t\t\t<div className=\"expense-item__price\">${props.amount}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Card>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from 'react';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = (props) => {\r\n\tlet expensesContent = <p>No expenses found...</p>;\r\n\r\n\tif (props.items.length === 0) {\r\n\t\treturn <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ul className=\"expenses-list\">\r\n\t\t\t{props.items.map((expense) => (\r\n\t\t\t\t<ExpenseItem\r\n\t\t\t\t\tkey={expense.id}\r\n\t\t\t\t\ttitle={expense.title}\r\n\t\t\t\t\tamount={expense.amount}\r\n\t\t\t\t\tdate={expense.date}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from 'react';\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n\tlet barFillHeight = '0%';\r\n\r\n\tif (props.maxValue > 0) {\r\n\t\tbarFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"chart-bar\">\r\n\t\t\t<div className=\"chart-bar__inner\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"chart-bar__fill\"\r\n\t\t\t\t\tstyle={{ height: barFillHeight }}\r\n\t\t\t\t></div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"chart-label\">{props.label}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from 'react';\r\nimport './Chart.css';\r\nimport ChartBar from './ChartBar';\r\n\r\nconst Chart = (props) => {\r\n\tconst dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n\tconst totalMax = Math.max(...dataPointValues);\r\n\treturn (\r\n\t\t<div className=\"chart\">\r\n\t\t\t{props.dataPoints.map((dataPoint) => (\r\n\t\t\t\t<ChartBar\r\n\t\t\t\t\tkey={dataPoint.label}\r\n\t\t\t\t\tvalue={dataPoint.value}\r\n\t\t\t\t\tmaxValue={totalMax}\r\n\t\t\t\t\tlabel={dataPoint.label}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n\tconst chartDataPoints = [\r\n\t\t{ label: 'Jan', value: 0 },\r\n\t\t{ label: 'Feb', value: 0 },\r\n\t\t{ label: 'Mar', value: 0 },\r\n\t\t{ label: 'Apr', value: 0 },\r\n\t\t{ label: 'May', value: 0 },\r\n\t\t{ label: 'Jun', value: 0 },\r\n\t\t{ label: 'Jul', value: 0 },\r\n\t\t{ label: 'Aug', value: 0 },\r\n\t\t{ label: 'Sep', value: 0 },\r\n\t\t{ label: 'Oct', value: 0 },\r\n\t\t{ label: 'Nov', value: 0 },\r\n\t\t{ label: 'Dec', value: 0 }\r\n\t];\r\n\r\n\tfor (const expense of props.expenses) {\r\n\t\tconst expenseMonth = expense.date.getMonth();\r\n\t\tchartDataPoints[expenseMonth].value += expense.amount;\r\n\t}\r\n\r\n\treturn <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import ExpensesFilter from '../ExpensesFilter/ExpensesFilter';\r\nimport Card from '../UI/Card';\r\nimport './Expenses.css';\r\nimport { useState } from 'react';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\nconst Expenses = (props) => {\r\n\tconst [filteredYear, setFilteredYear] = useState('2020');\r\n\tconst filterChangeHandler = (selectedYear) => {\r\n\t\tsetFilteredYear(selectedYear);\r\n\t};\r\n\tconst filteredExpenses = props.expenses.filter((expense) => {\r\n\t\treturn expense.date.getFullYear().toString() === filteredYear;\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Card className=\"expenses\">\r\n\t\t\t\t<ExpensesFilter\r\n\t\t\t\t\tselectedYear={filteredYear}\r\n\t\t\t\t\tonChangeFilter={filterChangeHandler}\r\n\t\t\t\t/>\r\n\t\t\t\t<ExpensesChart expenses={filteredExpenses} />\r\n\t\t\t\t<ExpensesList items={filteredExpenses} />\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Expenses;\r\n","import { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n\tconst [enteredTitle, setEnteredTitle] = useState('');\r\n\tconst [enteredAmount, setEnteredAmount] = useState('');\r\n\tconst [enteredDate, setEnteredDate] = useState('');\r\n\r\n\tconst titleChangeHandler = (event) => {\r\n\t\tsetEnteredTitle(event.target.value);\r\n\t};\r\n\r\n\tconst amountChangeHandler = (event) => {\r\n\t\tsetEnteredAmount(event.target.value);\r\n\t};\r\n\r\n\tconst dateChangeHandler = (event) => {\r\n\t\tsetEnteredDate(event.target.value);\r\n\t};\r\n\r\n\tconst submitHandler = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst expenseData = {\r\n\t\t\ttitle: enteredTitle,\r\n\t\t\tamount: +enteredAmount,\r\n\t\t\tdate: new Date(enteredDate)\r\n\t\t};\r\n\r\n\t\tprops.onSaveExpenseData(expenseData);\r\n\r\n\t\tsetEnteredTitle('');\r\n\t\tsetEnteredAmount('');\r\n\t\tsetEnteredDate('');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={submitHandler}>\r\n\t\t\t<div className=\"new-expense__controls\">\r\n\t\t\t\t<div className=\"new-expense__control\">\r\n\t\t\t\t\t<label>Title</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={enteredTitle}\r\n\t\t\t\t\t\tonChange={titleChangeHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"new-expense__control\">\r\n\t\t\t\t\t<label>Amount</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tmin=\"0.01\"\r\n\t\t\t\t\t\tstep=\"0.01\"\r\n\t\t\t\t\t\tvalue={enteredAmount}\r\n\t\t\t\t\t\tonChange={amountChangeHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"new-expense__control\">\r\n\t\t\t\t\t<label>Date</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\tmin=\"2022-01-01\"\r\n\t\t\t\t\t\tmax=\"2027-12-31\"\r\n\t\t\t\t\t\tvalue={enteredDate}\r\n\t\t\t\t\t\tonChange={dateChangeHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"new-expense__actions\">\r\n\t\t\t\t<button type=\"button\" onClick={props.onCancel}>\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</button>\r\n\t\t\t\t<button type=\"submit\">Add Expense</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import './NewExpense.css';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport { useState } from 'react';\r\nconst NewExpense = (props) => {\r\n\tconst [isEditing, setIsEditing] = useState(false);\r\n\tconst onSaveExpenseDataHandler = (enteredExpenseData) => {\r\n\t\tconst expenseData = {\r\n\t\t\t...enteredExpenseData,\r\n\t\t\tid: Math.random().toString()\r\n\t\t};\r\n\r\n\t\tprops.onAddExpense(expenseData);\r\n\t\tsetIsEditing(false);\r\n\t};\r\n\r\n\tconst startEditingHandler = () => {\r\n\t\tsetIsEditing(true);\r\n\t};\r\n\r\n\tconst stopEditingHandler = () => {\r\n\t\tsetIsEditing(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"new-expense\">\r\n\t\t\t{!isEditing && (\r\n\t\t\t\t<button onClick={startEditingHandler}>Add New Expense</button>\r\n\t\t\t)}\r\n\t\t\t{isEditing && (\r\n\t\t\t\t<ExpenseForm\r\n\t\t\t\t\tonSaveExpenseData={onSaveExpenseDataHandler}\r\n\t\t\t\t\tonCancel={stopEditingHandler}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NewExpense;\r\n","import Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\nimport { useState } from 'react';\n\nconst DUMMY_EXPENSES = [\n\t{\n\t\tid: 'e1',\n\t\ttitle: 'Toilet Paper',\n\t\tamount: 94.12,\n\t\tdate: new Date(2020, 7, 14)\n\t},\n\t{ id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n\t{\n\t\tid: 'e3',\n\t\ttitle: 'Car Insurance',\n\t\tamount: 294.67,\n\t\tdate: new Date(2021, 2, 28)\n\t},\n\t{\n\t\tid: 'e4',\n\t\ttitle: 'New Desk (Wooden)',\n\t\tamount: 450,\n\t\tdate: new Date(2021, 5, 12)\n\t}\n];\n\nconst App = () => {\n\tconst [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n\tconst addExpenseHandler = (expense) => {\n\t\tsetExpenses((prevExpenses) => {\n\t\t\treturn [expense, ...prevExpenses];\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<NewExpense onAddExpense={addExpenseHandler} />\n\t\t\t<Expenses expenses={expenses} />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}